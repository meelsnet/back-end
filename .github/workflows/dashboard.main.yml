name: Build, Test, Scan and Publish

on:
  push:
    branches: [ main ]

env:
  DOTNET_VERSION: '5.0.x'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code 🚨
        uses: actions/checkout@v2

      - name: Setup .NET 5 🔧
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies 🛠
        run: dotnet restore dashboard.sln

      - name: Build app 🚀
        run: dotnet build dashboard.sln -c Release --no-restore

      - name: Run automated tests 🧪
        run: dotnet test dashboard.sln -c Release --no-build

      - name: Publish app 📰
        run: dotnet publish dashboard.sln -c Release -o ./out

  sonar:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code 🚨
        uses: actions/checkout@v2

      - name: Static code analysis 👁
        uses: kitabisa/sonarqube-action@master
        with:
          host: ${{ secrets.SONAR_HOSTNAME }}
          login: ${{ secrets.SONAR_TOKEN }}

  deploy:
    runs-on: ubuntu-20.04
    needs: [build, sonar]
    steps:
      - name: Setup Docker Buildx 🏠
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub 🔑
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to Docker 🐳
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: bengotch/samplepython:latest